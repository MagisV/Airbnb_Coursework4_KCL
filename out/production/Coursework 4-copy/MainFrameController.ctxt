#BlueJ class context
comment0.target=MainFrameController
comment0.text=\r\n\ Class\ MainFrameController\ -\ This\ is\ the\ main\ frame\ in\ which\ the\ other\ content\ panels\ are\ being\ displayed.\r\n\ It\ provides\ functionalities\ such\ as\ choosing\ a\ price\ range,\ logging\ in,\ selecting\ filters\ and\ opening\ an\ panel\ displaying\ information\ about\ the\ users\ account.\r\n\ If\ different\ panels\ have\ to\ communicate\ with\ each\ other,\ this\ is\ done\ through\ this\ class\ because\ it\ holds\ references\ to\ the\ contentpanels\ and\ all\ other\ windows\ hold\r\n\ a\ reference\ to\ this\ frame.\r\n\r\n\ @author\ \ Valentin\ Magis,\ Rahin\ Ashraf,\ Vandad\ Vafai\ Tabrizi,\ Barnabas\ Szalai\r\n\ @version\ 1.0\r\n\ @since\ \ \ 2021-03-11\r\n
comment1.params=url\ bundle
comment1.target=void\ initialize(java.net.URL,\ java.util.ResourceBundle)
comment10.params=e
comment10.target=void\ switchPanel(javafx.event.ActionEvent)
comment10.text=\r\n\ Switched\ the\ panel\ when\ next\ or\ previous\ have\ been\ clicked.\r\n\ @param\ e\r\n
comment11.params=direction
comment11.target=MainframeContentPanel\ getNextView(java.lang.String)
comment11.text=\r\n\ Get\ the\ next\ panel\ to\ be\ shown\ in\ the\ center\ of\ the\ mainframe.\r\n\r\n\ @param\ direction\ If\ the\ "next"\ or\ the\ "previous"\ button\ has\ been\ clicked.\r\n\ @return\ Name\ of\ the\ next\ fxml\ file.\r\n
comment12.params=user
comment12.target=void\ setCurrentUser(Account)
comment12.text=\r\n\ Sets\ the\ current\ user\ in\ the\ mainframe\ and\ initializes\ to\ the\ currently\ displayed\ content\ panel.\r\n\ Added\ to\ all\ other\ panels\ automatically\ when\ switching.\r\n\r\n\ @param\ user\ The\ user\ who\ has\ just\ logged\ in.\r\n
comment13.params=listing
comment13.target=void\ loadBookingPanel(AirbnbListing)
comment13.text=\r\n\ Maybe\ redo.\r\n\ Loads\ the\ booking\ panel\ and\ passes\ in\ a\ listing\ to\ be\ displayed\ in\ combination\ with\ the\ search\ the\ user\ applied.\r\n\ Used\ for\ communication\ between\ the\ propertyDisplayer\ and\ the\ booking\ panel.\r\n\r\n\ @param\ listing\ The\ listing\ the\ booking\ controller\ should\ display\ the\ calculations\ for\ first.\r\n\ @throws\ IOException\ If\ the\ booking\ panel\r\n
comment14.params=
comment14.target=void\ loginNavigationClicked()
comment14.text=\r\n\ Display\ the\ login\ panel.\r\n\ @throws\ IOException\ If\ the\ panel\ cant\ be\ loaded.\r\n
comment15.params=
comment15.target=boolean\ isUsingDatabase()
comment16.params=areEnabled
comment16.target=void\ setFrameSwitchingButtonsActive(boolean)
comment16.text=\r\n\ Activates\ the\ buttons\ for\ switching\ the\ frame\ to\ be\ active.\r\n\r\n\ @param\ areEnabled\ If\ the\ buttons\ should\ be\ enabled\r\n
comment17.params=
comment17.target=javafx.stage.Window\ getWindow()
comment17.text=\r\n\ Get\ the\ window.\r\n\ @return\ the\ window.\r\n
comment18.params=e
comment18.target=void\ applyPriceRange(javafx.event.ActionEvent)
comment18.text=\r\n\ Set\ a\ price\ range.\ Checks\ for\ validity.\r\n\ @param\ e\r\n
comment19.params=box
comment19.target=java.lang.Integer\ convertChoiceBoxToInteger(javafx.scene.control.ChoiceBox)
comment19.text=\r\n\ Converts\ the\ selected\ item\ of\ a\ choicebox\ into\ an\ integer\ if\ possible.\r\n\r\n\ @param\ box\ Contents\ of\ this\ box\ will\ be\ converted.\r\n\ @return\ The\ integer.\ If\ the\ conversion\ was\ not\ possible,\ return\ null.\r\n
comment2.params=
comment2.target=void\ initializeFiltersComboBox()
comment20.params=minPrice\ maxPrice
comment20.target=void\ applyPriceRange(java.lang.Integer,\ java.lang.Integer)
comment20.text=\r\n\ Set\ the\ current\ chosen\ price\ range\ of\ objects\ to\ be\ shown.\r\n\r\n\ @param\ minPrice\ The\ minimum\ price\ range\ to\ be\ filtered\ for.\r\n\ @param\ maxPrice\ The\ maximum\ price\ range\ to\ be\ filtered\ for.\r\n
comment21.params=
comment21.target=void\ updateCurrentPanel()
comment21.text=\r\n\ Update\ the\ contents\ of\ the\ panel\ currently\ being\ displayed.\r\n
comment22.params=isLoggedIn
comment22.target=void\ setLoggedIn(boolean)
comment22.text=\r\n\ Disable\ the\ selection\ of\ the\ price\ range\ and\ the\ submitButton\ in\ the\ welcomePanel\ if\ the\ user\ is\ not\ logged\ in.\r\n\ The\ user\ can\ only\ use\ the\ program\ if\ logged\ in.\r\n\r\n\ @param\ isLoggedIn\ Whether\ the\ user\ is\ logged\ in.\r\n
comment23.params=
comment23.target=Listings\ getListings()
comment23.text=\r\n\ Get\ the\ listings.\r\n\r\n\ @return\ The\ listings.\r\n
comment24.params=submitted
comment24.target=void\ setFirstRequestSubmitted(boolean)
comment24.text=\r\n\ If\ a\ request\ for\ checkin,\ checkout\ and\ number\ of\ guests\ has\ been\ performed\ already.\r\n\ Has\ an\ effect\ on\ how\ buttons\ for\ switching\ panels\ behave.\r\n\r\n\ @param\ submitted\ Whether\ the\ first\ request\ has\ been\ submitted.\r\n
comment3.params=event
comment3.target=void\ activatedFilters(javafx.event.Event)
comment4.params=
comment4.target=void\ setChoiceComboBoxFilters()
comment4.text=\r\n\ Set\ the\ selection\ of\ the\ filterComboBox.\r\n\ Used\ to\ mirror\ the\ changes\ to\ filters\ in\ the\ boroughpropertiescontroller\ in\ the\ main\ frame.\r\n
comment5.params=usingDatabase
comment5.target=void\ setUsingDatabase(boolean)
comment6.params=
comment6.target=void\ createPanels()
comment7.params=
comment7.target=void\ initializePriceRangeDropDown()
comment7.text=\r\n\ Initialize\ the\ drop\ downs\ with\ selectable\ prices.\r\n
comment8.params=filename
comment8.target=void\ loadListings(java.lang.String)
comment8.text=\r\n\ Load\ the\ listings\ from\ the\ csv\ file.\r\n\r\n\ @param\ filename\ The\ name\ of\ the\ csv\ file\ to\ be\ loaded\r\n
comment9.params=e
comment9.target=void\ navigateToAccount(javafx.event.ActionEvent)
numComments=25
