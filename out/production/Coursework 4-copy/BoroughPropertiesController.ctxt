#BlueJ class context
comment0.target=BoroughPropertiesController
comment0.text=\r\n\ This\ class\ displays\ a\ list\ of\ properties\ that\ are\ available\ in\ the\ selected\ boroughs.\ It\ also\ allows\ the\ user\ to\r\n\ filter\ the\ tableview\ for\ price,\ hostname\ and\ \#\ of\ reviews.\ It\ also\ allows\ the\ user\ to\ inspect\ a\ particular\r\n\ property\ from\ the\ list.\r\n\r\n\ @author\ \ Valentin\ Magis,\ Rahin\ Ashraf,\ Vandad\ Vafai\ Tabrizi,\ Barnabas\ Szalai\r\n\ @version\ 1.0\r\n\ @since\ \ \ 2021-03-11\r\n
comment1.params=location\ resources
comment1.target=void\ initialize(java.net.URL,\ java.util.ResourceBundle)
comment1.text=\r\n\r\n
comment10.params=e
comment10.target=void\ rowClicked(javafx.scene.input.MouseEvent)
comment10.text=\r\n\ Initiated\ when\ a\ row\ in\ the\ tableview\ has\ been\ clicked.\ Initiates\ opening\ up\ a\ new\ window\ displaying\ further\ information\r\n\ about\ the\ property.\r\n\ @param\ e\r\n\ @throws\ IOException\r\n
comment11.params=property
comment11.target=void\ openPropertyDisplayView(AirbnbListing)
comment11.text=\r\n\ Opens\ up\ a\ new\ window\ displaying\ information\ about\ the\ property.\r\n\ @param\ property\r\n\ @throws\ IOException\r\n
comment12.params=mainFrameController
comment12.target=void\ setMainWindowController(MainFrameController)
comment12.text=\r\n\ This\ method\ initiates\ the\ mainFrameController.\ It\ is\ called\ from\ the\ MapController.\r\n
comment13.params=
comment13.target=javafx.stage.Window\ getWindow()
comment2.params=
comment2.target=void\ setFilterCheckBoxIds()
comment2.text=\r\n\ This\ method\ updates\ the\ ids\ and\ text\ of\ the\ filter\ checkboxes\ based\ on\ a\ static\ method\ in\ the\ FilterNames\ class.\r\n
comment3.params=
comment3.target=void\ buildTable()
comment3.text=\r\n\ This\ method\ creates\ the\ columns\ of\ the\ TableView\ and\ loads\ the\ rows,\ displaying\ the\ properties.\r\n
comment4.params=
comment4.target=void\ setActivatedCheckboxFilters()
comment4.text=\r\n\ Activates\ the\ stored\ checkbox\ filters.\r\n\ Problem\:\ this\ class\ is\ newly\ loaded\ every\ time\ and\ therefore\ the\ objects\ of\ checkbox\ are\ different\ ones\ -->\ cant\ compare\ checkboxes\ instead\ of\ strings\ rn.\r\n\ Solution\:\ Only\ create\ this\ controller\ once\ and\ later\ just\ show\ it.\ (Barni?)\r\n
comment5.params=listings\ selectedBoroughs\ currentUser
comment5.target=void\ initializeListing(Listings,\ java.util.ArrayList,\ Account)
comment5.text=\r\n\ This\ method\ is\ used\ to\ pass\ on\ default\ fields\ which\ the\ object\ can\ use\ later.\ It\ also\ initializes\ some\ of\ the\r\n\ class's\ instance\ variables.\r\n\ @param\ \ \ listings\ \ \ \ the\ filtered\ listings\ that\ are\ displayed\ after\ filtering\ for\ the\ borough\r\n\ @param\ \ \ selectedBoroughs\ \ \ \ the\ list\ of\ boroughs\ that\ the\ user\ selected\ from\ the\ map\r\n\ @param\ currentUser\ \ \ the\ current\ logged\ in\ user\r\n
comment6.params=actionEvent
comment6.target=void\ updateSort(javafx.event.ActionEvent)
comment6.text=\r\n\ Sorts\ properties\ by\ number\ of\ reviews,\ price\ or\ host\ name.\r\n
comment7.params=
comment7.target=void\ backNavigation()
comment7.text=\r\n\ This\ method\ is\ called\ when\ the\ back\ button\ is\ pressed.\ It\ closes\ the\ current\ window\ and\ opens\ a\ new\ stage\r\n\ showing\ the\ map\r\n
comment8.params=e
comment8.target=void\ changeFilter(javafx.event.ActionEvent)
comment8.text=\r\n\ Invoked\ every\ time\ a\ filter\ is\ checked\ or\ unchecked.\r\n\ Accordingly\ adds\ or\ removes\ the\ filter\ from\ the\ list\ of\ active\ filters\ which\ the\ list\ then\ is\ filtered\ by\ and\r\n\ then\ initiates\ the\ list\ to\ be\ filtered\ with\ the\ new\ composition\ of\ activated\ filters.\r\n\ @param\ e\r\n
comment9.params=
comment9.target=void\ displayList()
comment9.text=\r\n\ This\ method\ loads\ the\ filtered\ listings\ into\ the\ tableview.\r\n
numComments=14
